version: "3.8"
services:
  frontend:
    image: node:lts-alpine
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
      - /home/node/app/node_modules
    ports:
      # Expose node port (3000) to localhost:80
      # This allows access in browser through http://localhost without specific port
      - "80:3000"
    command: sh -c "npm install --include=dev && npm run dev"
    # Only start after backend is fully up
    depends_on:
      - backend
  backend:
    # "build" the backend python image, including necessary scripts and installing requirements
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    # Expose port 5000 to localhost
    ports:
      - "5001:5000"
    # Only run after postgresql is started and healthcheck is successful
    depends_on:
      postgresql:
        condition: service_healthy
  postgresql:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Expose port 5432 to localhost
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER" ]
      interval: 5s
      timeout: 30s
      retries: 10
